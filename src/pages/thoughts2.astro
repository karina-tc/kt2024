---
import Base from '../layouts/Base.astro'
import Row from '../components/Row.astro';
import { getThoughts } from '../lib/notion';
import CategoryPill from '../components/buttons/CategoryPill.astro';
import * as Icon from '@astropub/icons'

// Fetch thoughts from Notion
const thoughts = await getThoughts();

// Get unique categories
const allCategories = [...new Set(thoughts.flatMap(thought => thought.categories))];
const initialCategory = Astro.url.searchParams.get('category') || 'all';
---

<!-- bg-[url('landscape.png')] opacity-80 -->
<Base title="Thoughts" bg_classes="bg-[url('/public/landscape-two.png')] opacity-50 blur-sm">
  <div class="min-h-screen flex flex-col justify-center items-start">
    <section class="base-section--small">
      <h4 class="text--eyebrow">Thoughts</h4>
      <h1>
        <span class="block">Thinking</span>
        <span class="block">Experiences</span>
      </h1>
      <p class="text--intro !text-center">
        Diary of thoughts from a pixel pilosopher
      </p>
    </section>
    <section class="base-section--small !-mt-10 flex-1 !justify-start">
      <ul class="flex flex-wrap gap-2">
        <CategoryPill 
          category="All" 
          isButton={true} 
          isActive={initialCategory === 'all'} 
        />
        {allCategories.map(category => (
          <CategoryPill 
            category={category} 
            isButton={true} 
            isActive={initialCategory === category}
          />
        ))}
      </ul>

      <div id="thoughts-container" class="">
        {thoughts.map(thought => (
          <Row
            title={thought.title}
            date={thought.date}
            categories={thought.categories}
            href={thought.href}
            content={thought.content}
          />
        ))}
      </div>
    </section>
  </div>
</Base>

<script>
    import '../scripts/ThoughtsCategories';
  </script>

<style>
  .base-main {
    @apply flex-1 flex py-20;
  }
  .base-section--small {
    @apply w-full max-w-[720px] m-auto 
    text-center p-10 
    flex flex-col justify-center space-y-8;
    &:not(:first-of-type) {
      @apply mt-10;
      &::before {
        @apply h-0.5 w-10 bg-brand mx-auto mb-10;
        content: '';
      }
    }
  }
  .base-section--large {
    @apply w-full max-w-[1200px] m-auto 
    text-center p-10 
    flex flex-col justify-center space-y-8;
    &:not(:first-of-type) {
      @apply mt-10;
      &::before {
        @apply h-0.5 w-10 bg-brand mx-auto mb-10;
        content: '';
      }
    }
  }
  .experience-list li {
    @apply flex flex-col justify-start md:justify-between max-md:gap-2 md:flex-row text-sm 
    py-4 border-b border-dashed [&:first-of-type]:border-t border-inkLighter/50 transition-all
    hover:px-2 hover:bg-inkLighter/10;
  }
  .experience-list p:first-of-type {
    @apply flex gap-3 items-center font-medium;
  }
  .experience-list p:last-of-type {
    @apply font-mono text-sm uppercase font-normal text-left md:text-right;
  }
  .postit-grid {
    @apply grid grid-cols-1 md:grid-cols-2 gap-6;
  }

  .postit {
    @apply p-6 rounded-lg shadow-md !shadow-inkLighter/20 border border-white transition-all duration-300 hover:-translate-y-1 hover:shadow-lg;
  }

  .postit strong {
    @apply block mb-3 text-lg leading-5 font-semibold pb-4 border-dashed border-b border-inkLighter/50;
  }

  .postit p {
    @apply text-sm font-medium leading-relaxed text-inkDark/80;
  }

  .postit span {
    @apply text-xs font-medium font-mono leading-relaxed text-inkLighter mb-4 block;
  }

  .postit:hover span {
    @apply text-brand;
  }
</style>