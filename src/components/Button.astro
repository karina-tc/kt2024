---
import '../styles/global.css';

interface Props {
  href?: string;
  onClick?: string;
  type?: 'link' | 'button' | 'textual' | 'textual-button';
  additionalClasses?: string;
  children: any;
  'data-section'?: string;
  confetti?: boolean;
}

const { 
  href, 
  onClick, 
  type = 'button', 
  additionalClasses = '', 
  children,
  'data-section': dataSection,
  confetti = false
} = Astro.props;
---

{type === 'link' ? (
  <a 
    href={href} 
    class={`group button-wrapper ${additionalClasses}`}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
    <div class="button-effect">
      <div class="button-glow"></div>
    </div>
  </a>
) : type === 'textual' ? (
  <a 
    href={href} 
    class={`text-based ${additionalClasses}`} 
    data-section={dataSection}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
  </a>
) : type === 'textual-button' ? (
  <button 
    class={`text-based ${additionalClasses}`} 
    data-section={dataSection}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
  </button>
) : (
  <button 
    type="button" 
    class={`group button-wrapper ${additionalClasses}`} 
    onclick={onClick}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
    <div class="button-effect">
      <div class="button-glow"></div>
    </div>
  </button>
)}

<style>
  .button-wrapper {
    @apply cursor-pointer relative inline-flex h-9 items-center justify-center overflow-hidden rounded-full bg-carbon border border-white px-4 text-sm font-medium text-paper transition-all hover:shadow-md;
  }
  .button-effect {
    @apply absolute inset-0 flex h-full w-full justify-center [transform:skew(-12deg)_translateX(-100%)] group-hover:duration-1000 group-hover:[transform:skew(-12deg)_translateX(100%)];
  }
  .button-glow {
    @apply relative h-full w-8 bg-white/20
  }
  .text-based {
    @apply cursor-pointer text-base font-medium relative after:absolute after:-bottom-1 after:left-0 after:h-[2px] after:w-full after:origin-bottom-right after:scale-x-0 after:bg-inkLighter after:transition-transform after:duration-300 after:ease-[cubic-bezier(0.65_0.05_0.36_1)] hover:after:origin-bottom-left hover:after:scale-x-100;
  }
  .text-based.activate {
    @apply after:origin-bottom-left after:scale-x-100;
  }
</style>
