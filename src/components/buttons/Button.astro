---

interface Props {
  id?: string;
  href?: string;
  onClick?: string;
  type?: 'button' | 'submit' | 'reset';
  variant?: 'link' | 'button' | 'textual' | 'textual-button' | 'icon-link';
  additionalClasses?: string;
  'data-section'?: string;
  confetti?: boolean;
  defaultIcon?: any;
  hoverIcon?: any;
}

const { 
  id,
  href, 
  onClick, 
  variant = 'button',
  type = 'button', 
  additionalClasses = '', 
  'data-section': dataSection,
  confetti = false,
  defaultIcon,
  hoverIcon
} = Astro.props;
---
{variant === 'icon-link' ? (
  <a 
    id={id}
    href={href} 
    class={`group button-wrapper icon-link ${additionalClasses}`}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
    <div class="icon-container">
      {Astro.slots.has('default-icon') && (
        <div class="placer default-icon">
          <slot name="default-icon" />
        </div>
      )}
      {Astro.slots.has('hover-icon') && (
        <div class="placer hover-icon">
          <slot name="hover-icon" />
        </div>
      )}
    </div>
    <div class="button-effect">
      <div class="button-glow"></div>
    </div>
  </a>
) : variant === 'link' ? (
  <a 
    id={id}
    href={href} 
    class={`group button-wrapper ${additionalClasses}`}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
    <div class="button-effect">
      <div class="button-glow"></div>
    </div>
  </a>
) : variant === 'textual' ? (
  <a 
    id={id}
    href={href} 
    class={`text-based ${additionalClasses}`} 
    data-section={dataSection}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
  </a>
) : variant === 'textual-button' ? (
  <button 
    id={id}
    type={type}
    class={`text-based ${additionalClasses}`} 
    data-section={dataSection}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
  </button>
) : (
  <button 
    id={id}
    type={type} 
    class={`group button-wrapper ${additionalClasses}`} 
    onclick={onClick}
    {...confetti && { 'data-confetti': '' }}
  >
    <slot />
    <div class="button-effect">
      <div class="button-glow"></div>
    </div>
  </button>
)}

<style>
  /* Base Button Styles */
  .button-wrapper {
    @apply cursor-pointer 
           relative 
           inline-flex 
           h-9 
           items-center 
           justify-center 
           overflow-hidden 
           rounded-md 
           bg-brand 
           px-4 
           font-medium 
           text-paper 
           text-base 
           transition-all 
           hover:shadow-md;
  }

  /* Glow Effect Styles */
  .button-effect {
    @apply absolute 
           inset-0 
           flex 
           h-full 
           w-full 
           justify-center 
           [transform:skew(-12deg)_translateX(-100%)] 
           group-hover:duration-1000 
           group-hover:[transform:skew(-12deg)_translateX(100%)];
  }

  .button-glow {
    @apply relative 
           h-full 
           w-8 
           bg-white/20;
  }

  /* Text-based Button Styles */
  .text-based {
    @apply cursor-pointer 
           text-base 
           font-medium 
           relative 
           after:absolute 
           after:-bottom-1 
           after:left-0 
           after:h-[2px] 
           after:w-full 
           after:origin-bottom-right 
           after:scale-x-0 
           after:bg-brand 
           after:transition-transform 
           after:duration-300 
           after:ease-[cubic-bezier(0.65_0.05_0.36_1)] 
           hover:after:origin-bottom-left 
           hover:after:scale-x-100;
  }

  .text-based.activate {
    @apply after:origin-bottom-left 
           after:scale-x-100;
  }

  /* Icon Link Styles */
  .icon-link {
    @apply relative 
           flex 
           gap-3 
           items-center 
           min-h-10 
           !text-white 
           text-base;
  }

  .icon-container {
    @apply flex 
           p-1 
           h-8 
           w-8 
           -mr-3
           -ml-2
           items-center 
           justify-center 
           relative;
  }

  .icon-container .placer {
    @apply w-fit 
           h-fit 
           m-auto 
           absolute 
           inset-0 
           transition-opacity;
  }

  .default-icon {
    @apply opacity-100 
           group-hover:opacity-0;
  }

  .hover-icon {
    @apply opacity-0 
           group-hover:opacity-100;
  }

  /* Legacy button style - consider removing if unused */
  .button {
    @apply bg-brand 
           p-2 
           px-4 
           rounded-md 
           mt-4 
           text-paper 
           text-base;
  }
</style>

