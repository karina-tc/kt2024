---
import Layout from './Layout.astro';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import BackgroundImage from '../components/BackgroundImage.astro';
import ShowcaseImage from '../components/ShowcaseImage.astro';
import * as Icon from '@astropub/icons'
import '../styles/global.css';

interface Props {
  title: string;
  breadcrumbs: Array<{ text: string; href: string }>;
  subtitle?: string;
  additionalClasses?: string;
  showcaseImage?: string;
  showcaseImageAlt?: string;
  showcaseImageClasses?: string;
  showcaseImageInspiration?: string;
  bgImage?: string;
  bgImageClasses?: string;
  layout_body_classes?: string;
}

const {
  title,
  breadcrumbs,
  subtitle,
  additionalClasses = '',
  showcaseImage = '',
  showcaseImageAlt = '',
  showcaseImageClasses = '',
  bgImage,
  bgImageClasses = '',
  layout_body_classes = ''
} = Astro.props;
---

<Layout title={title} body_classes={`w-full min-h-screen p-10 ${layout_body_classes}`}>
  <main class="thoughts-container">
    {bgImage && <BackgroundImage src={bgImage} classes={bgImageClasses} />}

    <section class="animate-slide w-full max-w-5xl mx-auto">
      <Breadcrumbs showDropdown={false} crumbs={breadcrumbs} transition:persist transition:name="breadcrumbs"/>

      <header class="mt-10 thoughts-header">
        <h1>{title}</h1>
        <div class="date-container">
          {subtitle}
        </div>
      </header>
    </section>

    <section class="animate-slide"></section>
      {showcaseImage && (
        <div class={`layout-showcase max-w-7xl mx-auto group/showcase ${showcaseImageClasses}`}>
          {showcaseImageAlt &&
            <div class="layout-showcase-tag">
              <div class="mb-1 flex gap-2 items-center">
                <Icon.ActivityLog size="14" />
                <span class="font-bold pt-[2px]">The Prompt:</span>
              </div>
              <span>{showcaseImageAlt}</span>
            </div>
          }
          <ShowcaseImage
            src={showcaseImage}
            alt={showcaseImageAlt}
            shineColor="rgba(255, 255, 255, 0.25)"
          />
        </div>
      )}
    </section>

    <section class={`thought-content animate-slide ${additionalClasses}`}>
      <slot />
    </section>
  </main>
</Layout>

<style>
  .thoughts-container {
    @apply mx-auto p-10 flex flex-col w-full h-full;
  }
  .thoughts-header {
    @apply flex flex-col justify-center gap-5 text-center;
  }
  .thoughts-header h1 {
    @apply text-6xl font-bold mb-2;
  }
  .thought-content {
    @apply bg-transparent pb-20;
  }
  .thought-content :global(p) {
    margin-bottom: 1.5em;
  }
  
  .thought-content :global(h1),
  .thought-content :global(h2),
  .thought-content :global(h3) {
    margin-top: 1.5em;
    margin-bottom: 0.75em;
    font-weight: bold;
  }

  .thought-content :global(h2) {
    @apply font-instrument text-3xl text-inkDark;
  }
  
  .thought-content :global(ul),
  .thought-content :global(ol) {
    margin-left: 1.5em;
    margin-bottom: 1.5em;
  }
  
  .thought-content :global(li) {
    margin-bottom: 0.5em;
  }
  
  .thought-content :global(blockquote) {
    @apply pl-4 border-l-4 border-gray-300 italic my-6;
  }

  .thought-content :global(.callout) {
    @apply p-4 rounded-lg flex gap-3 my-6;
    background-color: var(--bg-color, theme('colors.gray.100'));
  }

  .animate-slide {
    @apply delay-75;
    animation: slideIn 1.75s cubic-bezier(0.39, 0.575, 0.565, 1) forwards;
  }

  @keyframes slideIn {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    90% {
      opacity: 0;
      transform: translateY(15px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>